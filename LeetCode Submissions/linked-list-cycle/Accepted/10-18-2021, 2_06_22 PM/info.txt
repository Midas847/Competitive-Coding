{"id":573106296,"lang":"cpp","time":"1Â month","timestamp":1634546182,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/573106296/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"7.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(head==NULL) return false;\n        ListNode* slow = head;\n        ListNode* fast = head;\n        while(fast->next!=NULL && fast->next->next!=NULL) {\n            slow = slow->next;\n            fast = fast->next->next;\n            if(slow==fast) return true;\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111","title_slug":"linked-list-cycle"}