{"id":537180480,"lang":"cpp","time":"3 months, 1 week","timestamp":1628743420,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/537180480/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int height(TreeNode* root){\n        if(root==NULL)\n            return 0;\n        return 1+max(height(root->left),height(root->right));\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        int lheight = height(root->left);\n        int rheight = height(root->right);\n        int ldiameter = diameterOfBinaryTree(root->left);\n        int rdiameter = diameterOfBinaryTree(root->right);\n        return max(lheight+rheight+1,max(ldiameter,rdiameter))-1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110001011","title_slug":"diameter-of-binary-tree"}