{"id":537189185,"lang":"cpp","time":"3 months, 1 week","timestamp":1628744628,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/537189185/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int height(TreeNode* root, int &ans)\n    {\n        if (root == NULL)\n            return 0;\n        ans = max(ans, height(root->left, ans) + height(root->right, ans));\n        return 1 + max(height(root->left, ans), height(root->right, ans));\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        if (root == NULL)\n            return 0;\n        int ans = INT_MIN;\n        height(root, ans);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"diameter-of-binary-tree"}