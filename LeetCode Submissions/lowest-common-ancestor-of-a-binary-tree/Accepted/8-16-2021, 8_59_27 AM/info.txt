{"id":539182626,"lang":"cpp","time":"3 months, 1 week","timestamp":1629084567,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/539182626/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        TreeNode* left;\n        TreeNode* right;\n        if(root==NULL)\n            return root;\n        if(root==p||root==q)\n            return root;\n        left = lowestCommonAncestor(root->left,p,q);\n        right = lowestCommonAncestor(root->right,p,q);\n        if(left&&right)\n            return root;\n        else\n            return(left ? left : right);\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}