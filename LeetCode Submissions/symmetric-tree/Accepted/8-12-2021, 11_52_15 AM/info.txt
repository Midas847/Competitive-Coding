{"id":537224087,"lang":"cpp","time":"3 months, 1 week","timestamp":1628749335,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/537224087/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isMirror(TreeNode* root1, TreeNode* root2){\n        if(root1==NULL&&root2==NULL)\n            return true;\n        else if(root1==NULL||root2==NULL)\n            return false;\n        return((root1->val==root2->val)&&(isMirror(root1->left,root2->right))&&(isMirror(root1->right,root2->left)));\n        }\n    bool isSymmetric(TreeNode* root) {\n        return isMirror(root,root);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}