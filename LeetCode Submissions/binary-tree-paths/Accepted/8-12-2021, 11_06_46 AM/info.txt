{"id":537203622,"lang":"cpp","time":"3 months, 1 week","timestamp":1628746606,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/537203622/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"11.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<string> v;\n    void pathLens(TreeNode* root,int pathLen[],int leng){\n        if(root==NULL)\n            return;\n        pathLen[leng] = root->val;\n        leng++;\n        if(root->left==NULL&&root->right==NULL){\n            printArray(pathLen,leng);\n        }\n        else{\n            pathLens(root->left,pathLen,leng);\n            pathLens(root->right,pathLen,leng);\n        }\n    }\n    void printArray(int pathLen[], int leng){\n        string ans=\"\";\n        for(int i=0;i<leng;i++){\n            if(i!=leng-1)\n                ans+=to_string(pathLen[i])+\"->\";\n            else\n                ans+=to_string(pathLen[i]);\n        }\n        v.push_back(ans);\n    }\n    vector<string> binaryTreePaths(TreeNode* root) {\n        int pathLen[1000];\n        pathLens(root,pathLen,0);\n        return v;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths"}