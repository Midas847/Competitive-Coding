{"id":576800452,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1635142500,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/576800452/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n    vector<int> rightSideView(TreeNode* root) {\n        if(root == NULL)\n            return {};\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int count = q.size();\n            vector<int> v1;\n            while(count--){\n                TreeNode* temp = q.front();\n                v1.push_back(temp->val);\n                //cout<<temp->val<<\" \";\n                q.pop();\n                if(temp->left)\n                    q.push(temp->left);\n                if(temp->right)\n                    q.push(temp->right);\n            }\n            v.push_back(v1[v1.size()-1]);\n        }\n        return v;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}