{"id":536679626,"lang":"cpp","time":"3 months, 1 week","timestamp":1628662202,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/536679626/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        TreeNode* temp;\n        int sum = 0;\n        if(root!=NULL){\n           queue<TreeNode*> q;\n            \n            q.push(root);\n            while(!q.empty()){\n                int qsize = q.size();\n                sum = 0;\n                while(qsize-->0){\n                temp = q.front();\n                q.pop();\n                sum+=temp->val;\n                if(temp->left)\n                    q.push(temp->left);\n                if(temp->right)\n                    q.push(temp->right);\n                }\n            }\n        }\n        return sum;\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}