{"id":534068631,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1628226996,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/534068631/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int height(TreeNode* node){\n        if(node==NULL)\n            return 0;\n        return(max(height(node->left),height(node->right))+1);\n    }\n    bool isBalanced(TreeNode* root) {\n        if(root==NULL)\n            return true;\n        int ldepth = height(root->left);\n        int rdepth = height(root->right);\n        if(abs(ldepth-rdepth)<=1&&isBalanced(root->left)&&isBalanced(root->right))\n            return true;\n        return false;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}