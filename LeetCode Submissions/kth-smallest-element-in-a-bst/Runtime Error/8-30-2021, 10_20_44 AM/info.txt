{"id":546483474,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1630299044,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/546483474/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* kthSmallestUtil(TreeNode* root,int k,int count){\n        if(root==NULL)\n            return NULL;\n        TreeNode* left = kthSmallestUtil(root->left,k,count);\n        if(left)\n            return left;\n        if(++count==k)\n            return root;\n        return kthSmallestUtil(root->right,k,count);\n    }\n    int kthSmallest(TreeNode* root, int k) {\n        int count = 0;\n        return kthSmallestUtil(root,k,count)->val;\n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"kth-smallest-element-in-a-bst"}