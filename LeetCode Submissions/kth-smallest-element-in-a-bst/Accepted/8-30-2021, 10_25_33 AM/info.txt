{"id":546485481,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1630299333,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/546485481/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root,vector<int> &temp){\n        if(!root)\n            return;\n        inorder(root->left,temp);\n        temp.push_back(root->val);\n        inorder(root->right,temp);\n    }\n    int kthSmallest(TreeNode* root, int k) {\n        vector<int> temp;\n        inorder(root,temp);\n        if(k > temp.size())\n            return -1;\n        else\n            return temp[k-1];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}