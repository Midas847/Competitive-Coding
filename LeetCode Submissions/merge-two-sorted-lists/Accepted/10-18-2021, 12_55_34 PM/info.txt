{"id":573082960,"lang":"cpp","time":"1Â month","timestamp":1634541934,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/573082960/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"15.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void insert(ListNode** root, int item)\n    {\n        ListNode* temp = new ListNode;\n        ListNode* ptr;\n        temp->val = item;\n        temp->next = NULL;\n\n        if (*root == NULL)\n            *root = temp;\n        else {\n            ptr = *root;\n            while (ptr->next != NULL)\n                ptr = ptr->next;\n            ptr->next = temp;\n        }\n    }\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        ListNode* temp = l1;\n        ListNode* temp1 = l2;\n        vector<int>v;\n        while(temp!=NULL){\n            v.push_back(temp->val);\n            temp = temp->next;\n        }\n        while(temp1!=NULL){\n            v.push_back(temp1->val);\n            temp1 = temp1->next;\n        }\n        sort(v.begin(),v.end());\n        ListNode* temp3 = NULL;\n        for(int i=0;i<v.size();i++){\n            insert(&temp3, v[i]);\n        }\n        return temp3;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}