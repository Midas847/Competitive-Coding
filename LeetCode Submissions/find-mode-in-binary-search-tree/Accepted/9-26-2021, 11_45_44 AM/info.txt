{"id":561145212,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632636944,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/561145212/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"25.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n    void inorder(TreeNode* root){\n        if(root!=NULL){\n            inorder(root->left);\n            v.push_back(root->val);\n            inorder(root->right);\n        }\n    }\n    vector<int> findMode(TreeNode* root) {\n        if(root==NULL){\n            vector<int> s;\n            s.push_back(0);\n            return s;\n        }\n        inorder(root);\n        map<int,int> m;\n        for(int i=0;i<v.size();i++){\n            m[v[i]]++;\n        }\n        int maxval = 0;\n        for(auto x:m){\n            maxval = max(maxval,x.second);\n        }\n        vector<int> g;\n        for(auto x:m){\n            if(x.second==maxval){\n                g.push_back(x.first);\n            }\n        }\n        return g;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree"}