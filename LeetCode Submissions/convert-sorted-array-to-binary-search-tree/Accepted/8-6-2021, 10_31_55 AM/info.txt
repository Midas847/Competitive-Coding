{"id":534062566,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1628226115,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/534062566/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortIt(vector<int>& nums,int start,int end){\n        if(start>end)\n            return NULL;\n        int mid = (start+end)/2;\n        TreeNode* root = new TreeNode(nums[mid]);\n        root->left = sortIt(nums, start, mid-1);\n        root->right = sortIt(nums, mid+1, end);\n        return root;\n    }\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return(sortIt(nums,0,nums.size()-1));\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}