{"id":540736495,"lang":"cpp","time":"3Â months","timestamp":1629345318,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/540736495/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"28.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxPathSumUtil(TreeNode* root, int &res){\n        if(root==NULL)\n            return 0;\n        int l = maxPathSumUtil(root->left,res);\n        int r = maxPathSumUtil(root->right,res);\n        int max_here = max(max(l,r)+root->val,root->val);\n        int max_sum = max(max_here,l+r+root->val);\n        res = max(res,max_sum);\n        return max_here;\n    }\n    int maxPathSum(TreeNode* root) {\n        int res = INT_MIN;\n        maxPathSumUtil(root,res);\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}