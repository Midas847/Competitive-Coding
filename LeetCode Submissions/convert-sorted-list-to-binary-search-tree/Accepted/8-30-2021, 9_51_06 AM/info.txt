{"id":546471414,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1630297266,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/546471414/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"31.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* newNode(int data){\n        TreeNode* newnode = new TreeNode();\n        newnode->val  = data;\n        newnode->left=newnode->right=NULL;\n        return newnode;\n    }\n    int countNodes(ListNode* head){\n        int count = 0;\n        ListNode* temp = head;\n        while(temp!=NULL){\n            count++;\n            temp = temp->next;\n        }\n        return count;\n    }\n    TreeNode* sortedListToBSTRecur(ListNode** head_ref,int n){\n        if(n<=0)\n            return NULL;\n        TreeNode* left = sortedListToBSTRecur(head_ref,n/2);\n        TreeNode* root = newNode((*head_ref)->val);\n        root->left = left;\n        (*head_ref) = (*head_ref)->next;\n        root->right = sortedListToBSTRecur(head_ref,n-n/2-1);\n        return root;\n    }\n    TreeNode* sortedListToBST(ListNode* head) {\n        int n = countNodes(head);\n        return sortedListToBSTRecur(&head,n);\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree"}