{"id":565071514,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633268712,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/565071514/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"11.7 MB","code":"class Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        int max_so_far = nums[0];\n        int max_ending_here = nums[0];\n        int min_ending_here = nums[0];\n        for(int i=1;i<nums.size();i++){\n            int temp = max_ending_here;\n            max_ending_here = max({temp*nums[i],nums[i],min_ending_here*nums[i]});\n            min_ending_here = min({temp*nums[i],nums[i],min_ending_here*nums[i]});\n            max_so_far = max(max_ending_here,max_so_far);\n        }\n        return max_so_far;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}