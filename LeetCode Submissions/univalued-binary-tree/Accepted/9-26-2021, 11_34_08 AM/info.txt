{"id":561140218,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632636248,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/561140218/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n    void inorder(TreeNode* root)\n    {\n        if(root!=NULL){\n            inorder(root->left);\n            v.push_back(root->val);\n            inorder(root->right);\n        }\n        \n    }    bool isUnivalTree(TreeNode* root) {\n        if(root==NULL)\n            return true;\n        inorder(root);\n        int m= v[0];\n        for(int i=1;i<v.size();i++){\n            if(v[i]!=m){\n                return false;\n            }\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}