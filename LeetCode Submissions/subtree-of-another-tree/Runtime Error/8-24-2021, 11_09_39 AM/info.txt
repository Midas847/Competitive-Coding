{"id":543280628,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1629783579,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/543280628/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool sub(TreeNode* root, TreeNode* subRoot){\n        if(!root&&!subRoot)\n            return true;\n        if((root->val!=subRoot->val)||(!root||!subRoot))\n            return false;\n        return sub(root->left,subRoot->left)&&sub(root->right,subRoot->right);\n    }\n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        if(!root)\n            return false;\n        if(root->val==subRoot->val){\n            if(sub(root,subRoot))\n                return true;\n        }\n        return isSubtree(root->left , subRoot) || isSubtree(root->right , subRoot);\n    }\n};","compare_result":"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"subtree-of-another-tree"}