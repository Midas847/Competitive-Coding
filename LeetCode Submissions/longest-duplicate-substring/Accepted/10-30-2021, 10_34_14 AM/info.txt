{"id":579310270,"lang":"cpp","time":"3 weeks, 1 day","timestamp":1635570254,"status_display":"Accepted","runtime":"852 ms","url":"/submissions/detail/579310270/","is_pending":"Not Pending","title":"Longest Duplicate Substring","memory":"209.2 MB","code":"#define ULL unsigned long long\n\nclass Solution {\npublic:\n    int check(const string &s, int len,ULL power){\n        int n = s.length();\n        unordered_set<ULL> seen;\n        \n        ULL hash = 0;\n        for(int i=0;i<len;i++){\n            hash = hash * 131 + s[i] - 'a';\n        }\n        seen.insert(hash);\n        for(int i=len;i<n;i++){\n            hash = hash - power * (s[i-len] - 'a');\n            hash = hash * 131 + s[i] - 'a';\n            if(seen.find(hash)!=seen.end())\n                return i - len + 1;\n            seen.insert(hash);\n        }\n        return -1;\n    }\n    string longestDupSubstring(string S) {\n        int n = S.length();\n        int l = 0;\n        int r = n-1;\n        vector<ULL> power(n,1);\n        for(int i=1;i<n;i++)\n            power[i] = power[i-1] * 131;\n        while(l<r){\n            int mid = l + (r-l)/2;\n            if(check(S,mid+1,power[mid])==-1)\n                r = mid;\n            else\n                l = mid+1;\n        }\n        if(l==0)\n            return \"\";\n        return S.substr(check(S,l,power[l-1]),l);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-duplicate-substring"}