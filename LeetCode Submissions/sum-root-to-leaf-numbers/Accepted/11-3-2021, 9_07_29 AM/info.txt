{"id":581296150,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1635910649,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/581296150/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"9.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root,int sum,vector<int>& pathSum){\n        if(root == NULL)\n            return;\n        sum = sum*10+root->val;\n        if(root->left == NULL && root->right == NULL)\n        {\n            pathSum.push_back(sum);\n            cout<<sum<<\" \";\n            return;\n        }\n        inorder(root->left,sum,pathSum);\n        inorder(root->right,sum,pathSum);\n    }\n    int sumNumbers(TreeNode* root) {\n        vector<int> pathSum;\n        inorder(root,0,pathSum);\n        int total = 0;\n        for(int i=0;i<pathSum.size();i++){\n            total += pathSum[i];\n        }\n        return total;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers"}