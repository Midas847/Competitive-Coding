{"id":573100745,"lang":"cpp","time":"1Â month","timestamp":1634545070,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/573100745/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"12.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void insert(ListNode** root, int item)\n    {\n        ListNode* temp = new ListNode;\n        ListNode* ptr;\n        temp->val = item;\n        temp->next = NULL;\n\n        if (*root == NULL)\n            *root = temp;\n        else {\n            ptr = *root;\n            while (ptr->next != NULL)\n                ptr = ptr->next;\n            ptr->next = temp;\n        }\n    }\n    ListNode* deleteDuplicates(ListNode* head) {\n        ListNode* temp = head;\n        vector<int> v;\n        while(head!=NULL){\n            int data = head->val;\n            v.push_back(data);\n            head = head->next;\n        }\n        vector<int>::iterator ip;\n        ip = std::unique(v.begin(), v.end());\n        v.resize(std::distance(v.begin(), ip));\n        ListNode* temp1 = NULL;\n        for(auto x:v){\n            insert(&temp1,x);\n        }\n        return temp1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list"}