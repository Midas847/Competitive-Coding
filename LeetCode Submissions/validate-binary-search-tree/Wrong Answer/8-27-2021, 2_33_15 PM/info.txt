{"id":545034909,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1630054995,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/545034909/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidUtil(TreeNode* root,int min,int max){\n        if(root==NULL)\n            return 1;\n        return(root->val > min && root->val < max && isValidUtil(root->left,min,root->val)&& isValidUtil(root->right,root->val,max));\n    }\n    bool isValidBST(TreeNode* root) {\n        return isValidUtil(root, INT_MIN, INT_MAX);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111100111101010111001110","title_slug":"validate-binary-search-tree"}