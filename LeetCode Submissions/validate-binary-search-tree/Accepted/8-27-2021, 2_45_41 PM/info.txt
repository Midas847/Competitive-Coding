{"id":545038861,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1630055741,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/545038861/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root, vector<int>&ans){\n        if(root==NULL)\n            return;\n        inorder(root->left,ans);\n        ans.push_back(root->val);\n        inorder(root->right,ans);\n    }\n    bool isValidBST(TreeNode* root) {\n        vector<int> ans;\n        inorder(root,ans);\n        int max1 = ans[0];\n        bool valid = true;\n        for(int i=1;i<ans.size();i++){\n            if(ans[i] <= max1){\n                valid = false;\n                break;\n            }\n            else{\n                max1 = ans[i];\n            }\n        }\n        return valid;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}