{"id":548173469,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630556779,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/548173469/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> noob;\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        if(root==NULL)\n            return noob;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int count = q.size();\n            vector<int> arr;\n            while(count--){\n                TreeNode* temp = q.front();\n                arr.push_back(temp->val);\n                q.pop();\n                if(temp->left)\n                    q.push(temp->left);\n                if(temp->right)\n                    q.push(temp->right);\n            }\n            noob.push_back(arr);\n        }\n        reverse(noob.begin(),noob.end());\n        return noob;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}