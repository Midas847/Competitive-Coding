{"id":535753150,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1628515254,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/535753150/","is_pending":"Not Pending","title":"Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasPathSum(TreeNode* root, int targetSum) {\n           stack<TreeNode*> stk;\n        TreeNode *r1=root;\n        int sum1=0;int c=0;\n        while(1)\n        {\n            \n            while(root)\n            {\n                \n                sum1=sum1+root->val;\n                stk.push(root);\n                root=root->left;\n               \n            }\n            if(stk.empty())\n                return false;\n            if(sum1==targetSum)\n                return true;\n            \n                \n         \n            sum1=sum1-stk.top()->val;\n            stk.pop();\n            root=stk.top();\n            \n            root=root->right;\n           \n        \n    }\n    }\n};","compare_result":"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"path-sum"}