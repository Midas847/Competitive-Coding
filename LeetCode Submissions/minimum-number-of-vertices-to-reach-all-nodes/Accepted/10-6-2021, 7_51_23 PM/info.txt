{"id":566815898,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633530083,"status_display":"Accepted","runtime":"408 ms","url":"/submissions/detail/566815898/","is_pending":"Not Pending","title":"Minimum Number of Vertices to Reach All Nodes","memory":"126 MB","code":"class Solution {\npublic:\n    list<int>* adj;\n    void addEdge(int u,int v){\n        adj[u].push_back(v);\n    }\n    vector<int> findSmallestSetOfVertices(int n, vector<vector<int>>& edges) {\n        adj = new list<int>[n];\n        for(int i=0;i<edges.size();i++){\n            addEdge(edges[i][0],edges[i][1]);\n        }\n        vector<int> v;\n        //vector<int> indegree(n+1,0);\n        map<int,int> indegree;\n        for(int i=0;i<n;i++){\n            for(auto j:adj[i]){\n                indegree[j]++;\n                //cout<<j<<\" \";\n            }\n            //cout<<\"\\n\";\n        }\n        for(int i=0;i<n;i++){\n            if(indegree[i] == 0)\n                v.push_back(i);\n        }\n        return v;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-vertices-to-reach-all-nodes"}