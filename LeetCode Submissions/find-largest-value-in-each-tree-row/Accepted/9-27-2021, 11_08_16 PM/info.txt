{"id":561933081,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632764296,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/561933081/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n    vector<int> largestValues(TreeNode* root) {\n        if(root==NULL)\n            return v;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int si = q.size();\n            int maxele = INT_MIN;\n            while(si--){\n                TreeNode* temp = q.front();\n                //cout<<temp->val<<\" \";\n                maxele = max(maxele,temp->val);\n                q.pop();\n                if(temp->left)\n                    q.push(temp->left);\n                if(temp->right)\n                    q.push(temp->right);\n            }\n            //cout<<\"\\n\";\n            v.push_back(maxele);\n        }\n        return v;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row"}