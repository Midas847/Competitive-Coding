{"id":568680011,"lang":"cpp","time":"1 month, 1 week","timestamp":1633841148,"status_display":"Accepted","runtime":"790 ms","url":"/submissions/detail/568680011/","is_pending":"Not Pending","title":"Stock Price Fluctuation ","memory":"168.8 MB","code":"class StockPrice {\npublic:\n    map<int,int> m;\n    multiset<int> s;\n    StockPrice() {\n        \n    }\n    \n    void update(int timestamp, int price) {\n        if(m.find(timestamp)!=m.end())\n            s.erase(s.find(m[timestamp]));\n        m[timestamp] = price;\n        s.insert(price);\n    }\n    \n    int current() {\n        return m.rbegin()->second;\n    }\n    \n    int maximum() {\n        return *s.rbegin();\n    }\n    \n    int minimum() {\n        return *s.begin();\n    }\n};\n\n/**\n * Your StockPrice object will be instantiated and called as such:\n * StockPrice* obj = new StockPrice();\n * obj->update(timestamp,price);\n * int param_2 = obj->current();\n * int param_3 = obj->maximum();\n * int param_4 = obj->minimum();\n */","compare_result":"11111111111111111","title_slug":"stock-price-fluctuation"}