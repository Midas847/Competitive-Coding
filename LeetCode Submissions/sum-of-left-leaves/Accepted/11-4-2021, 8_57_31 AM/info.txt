{"id":581805115,"lang":"cpp","time":"2Â weeks, 3Â days","timestamp":1635996451,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/581805115/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"13.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isLeaf(TreeNode* node){\n        if(node==NULL)\n            return false;\n        if(node->right==NULL&&node->left==NULL)\n            return true;\n        else\n            return false;\n    }\n    int sumOfLeftLeaves(TreeNode* root) {\n        int sum = 0;\n        if(root!=NULL){\n            if(isLeaf(root->left))\n                sum+=root->left->val;\n            else\n                sum+=sumOfLeftLeaves(root->left);\n            sum+=sumOfLeftLeaves(root->right);\n        }\n        return sum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves"}