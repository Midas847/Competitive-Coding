{"id":562836210,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632899993,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/562836210/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        ListNode* ptr1 = headA;\n        ListNode* ptr2 = headB;\n        if(ptr1 == NULL || ptr2 == NULL)\n            return NULL;\n        while(ptr1 != ptr2)\n        {\n            ptr1 = ptr1->next;\n            ptr2 = ptr2->next;\n            if(ptr1==ptr2){\n                return ptr1;\n            }\n\n            if(ptr1==NULL){\n                ptr1 = headB;\n            }\n            if(ptr2==NULL){\n                ptr2 = headA;\n            }\n        }\n        return ptr1;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}