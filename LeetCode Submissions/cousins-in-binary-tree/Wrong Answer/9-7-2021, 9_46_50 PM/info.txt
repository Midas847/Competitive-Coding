{"id":551014480,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1631031410,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/551014480/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isCousins(TreeNode* root, int x, int y) {\n        if(root==NULL)\n            return true;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int count = q.size();\n            int flag=0;\n            while(count--){\n                TreeNode* temp = q.front();\n                //cout<<temp->val<<\" \";\n                if(temp->val==x||temp->val==y)\n                    flag++;\n                if(flag==2)\n                    return true;\n                q.pop();\n                if(temp->left)\n                    q.push(temp->left);\n                if(temp->right)\n                    q.push(temp->right);\n            }\n            cout<<\"\\n\";\n        }\n        return false;\n    }\n};","compare_result":"110110101011111001110010111111111111111011111011111111110111100111111011111110111111101011111111111111111","title_slug":"cousins-in-binary-tree"}