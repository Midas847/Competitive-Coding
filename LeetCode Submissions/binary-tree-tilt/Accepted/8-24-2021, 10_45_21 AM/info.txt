{"id":543270065,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1629782121,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/543270065/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"23.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int final_sum = 0;\n    int storesum(TreeNode* root){\n        if(root==NULL)\n        {\n            return 0;\n        }\n        int leftsum = storesum(root->left);\n        int rightsum = storesum(root->right);\n        final_sum+=abs(leftsum-rightsum);\n        int sum =root->val+leftsum+rightsum;\n        return sum;\n    }\n    int findTilt(TreeNode* root) {\n        storesum(root);\n        return final_sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt"}