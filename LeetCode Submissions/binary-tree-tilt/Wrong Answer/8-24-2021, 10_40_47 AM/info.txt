{"id":543267974,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1629781847,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/543267974/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sum = 0;\n    void postorder(TreeNode* root){\n        if(root==NULL)\n            return;\n        findTilt(root->left);\n        findTilt(root->right);\n        if(root->left!=NULL&&root->right!=NULL)\n            sum += abs(root->left->val-root->right->val);\n        else if(root->left==NULL&&root->right!=NULL)\n            sum += abs(root->right->val);\n        else if(root->left!=NULL&&root->right==NULL)\n            sum += abs(root->left->val);\n    }\n    int findTilt(TreeNode* root) {\n        postorder(root);\n        return sum;\n    }\n};","compare_result":"10010001111111000001000000000001000000000000001000000000000000000000000000000","title_slug":"binary-tree-tilt"}