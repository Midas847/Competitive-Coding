{"id":555472188,"lang":"cpp","time":"2Â months","timestamp":1631728520,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/555472188/","is_pending":"Not Pending","title":"Longest Turbulent Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxTurbulenceSize(vector<int>& arr) {\n        int count = INT_MIN;\n        int c = 0;\n        if(arr.size()==1)\n            return 1;\n        for(int i=0;i<arr.size()-1;i++){\n            if(i%2!=0 && arr[i] > arr[i+1]){\n                c++;\n            }\n            else if(i%2==0 && arr[i] < arr[i+1]){\n                c++;\n            }\n            else{\n                count = max(count,c);\n                c = 0;\n            }\n        }\n        c = 0;\n        for(int i=0;i<arr.size()-1;i++){\n            if(i%2==0 && arr[i] > arr[i+1]){\n                c++;\n            }\n            else if(i%2!=0 && arr[i] < arr[i+1]){\n                c++;\n            }\n            else{\n                count = max(count,c);\n                c = 0;\n            }\n        }\n        return count+1;\n    }\n};","compare_result":"11111111011111001101011110111111111111111111111111111111111111111111111111111111111111110","title_slug":"longest-turbulent-subarray"}