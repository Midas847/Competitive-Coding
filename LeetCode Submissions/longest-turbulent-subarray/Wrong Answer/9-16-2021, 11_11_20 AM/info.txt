{"id":555759076,"lang":"cpp","time":"2Â months","timestamp":1631770880,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/555759076/","is_pending":"Not Pending","title":"Longest Turbulent Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxTurbulenceSize(vector<int>& arr) {\n        int c=1,c1=1,res=0;\n        for(int i=1;i<arr.size();i++){\n            if(i%2){\n                if(arr[i-1]>arr[i])c++;\n                else c=1;\n            }\n            else if(i%2==0){\n                if(arr[i-1]<arr[i])c++;\n                else c=1;\n            }\n            res = max(res,c);\n        }\n        for(int i=1;i<arr.size();i++){\n            if(i%2==0){\n                if(arr[i-1]>arr[i])c1++;\n                else c1=1;\n            }\n            else if(i%2){\n                if(arr[i-1]<arr[i])c1++;\n                else c1=1;\n            }\n            res = max(res,c1);\n        }\n        return res;\n    }\n};","compare_result":"11011111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-turbulent-subarray"}