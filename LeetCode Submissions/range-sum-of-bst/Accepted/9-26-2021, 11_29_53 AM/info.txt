{"id":561138391,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632635993,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/561138391/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"67.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n    void inorder(TreeNode* root){\n        if(root!=NULL){\n            inorder(root->left);\n            v.push_back(root->val);\n            inorder(root->right);\n        }\n    }\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        if(root==NULL)\n            return NULL;\n        inorder(root);\n        int sum = 0;\n        for(int i=0;i<v.size();i++){\n            if(v[i] >=low && v[i] <= high){\n                sum+=v[i];\n            }\n        }\n        return sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst"}