{"id":587648022,"lang":"cpp","time":"5 days, 21 hours","timestamp":1636999512,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/587648022/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        int n = nums.size();\n        if(n == 0 || n==1)\n            return nums;\n        sort(nums.begin(),nums.end());\n        vector<int> dp(n, 1);\n        int maxEle = INT_MIN;\n        for(int i=1;i<n;i++){\n            for(int j=i-1;j>=0;j--){\n                if(nums[i]%nums[j] == 0){\n                    int t = 1+dp[j];\n                    if(t > dp[i])\n                        dp[i] = t;\n                }\n            }\n            if(dp[i] > maxEle)\n                maxEle = dp[i];\n        }\n        vector<int> v;\n        for(int i=n-1;i>=0;i--){\n            cout<<maxEle<<\" \";\n            if(dp[i] == maxEle){\n                \n                v.push_back(nums[i]);\n                maxEle--;   \n            }\n        }\n        return v;\n    }\n};","compare_result":"111111111101011110111010010000000000000000000001","title_slug":"largest-divisible-subset"}