{"id":528961034,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1627366679,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/528961034/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v1;\n   void printInorder(TreeNode* node) {\n\t\tif (node == NULL)\n\t\t\treturn;\n\t\tprintInorder(node->left); \n\t\tv1.push_back(node->val);\n\t\tprintInorder(node->right);\n\t}\n\t  vector<int> inorderTraversal(TreeNode* root) {\n\t\t\tprintInorder(root);\n\t\t\treturn v1;\n\t\t}\n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}