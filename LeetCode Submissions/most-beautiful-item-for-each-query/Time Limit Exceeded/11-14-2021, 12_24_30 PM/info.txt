{"id":586913235,"lang":"cpp","time":"1Â week","timestamp":1636872870,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/586913235/","is_pending":"Not Pending","title":"Most Beautiful Item for Each Query","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> maximumBeauty(vector<vector<int>>& items, vector<int>& queries) {\n        vector<int> res(queries.size());\n        vector<vector<int>> qp;\n        for(int i=0;i<queries.size();i++)\n            qp.push_back({queries[i],i});\n        int maxBeauty = 0;\n        sort(qp.begin(),qp.end());\n        sort(items.begin(),items.end());\n        for(int i=0;i<queries.size();i++){\n            int m = qp[i][0];\n            int n = qp[i][1];\n            int itemIndex = 0;\n            while(itemIndex < items.size() && items[itemIndex][0] <= m){\n                maxBeauty = max(maxBeauty,items[itemIndex][1]);\n                itemIndex++;\n            }\n            res[n] = maxBeauty;\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111100","title_slug":"most-beautiful-item-for-each-query"}