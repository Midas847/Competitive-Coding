{"id":562251014,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632810214,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/562251014/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"13.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<TreeNode*> v;\n    void preOrder(TreeNode* root){\n        if(root==NULL)\n            return;\n        v.push_back(root);\n        preOrder(root->left);\n        preOrder(root->right);\n    }\n    void flatten(TreeNode* root) {\n        if(root==NULL)\n            return;\n        preOrder(root);\n        root = v[0];\n        for(int i=1;i<v.size();i++){\n            root->right = v[i];\n            root->left = NULL;\n            root = root->right;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}