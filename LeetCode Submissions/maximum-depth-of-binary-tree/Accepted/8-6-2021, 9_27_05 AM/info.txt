{"id":534036915,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1628222225,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/534036915/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxdepth = 0;\n    int maxDepth(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        else{\n            int ldepth = maxDepth(root->left);\n            int rdepth = maxDepth(root->right);\n            if(ldepth>rdepth)\n                return(ldepth+1);\n            else\n                return(rdepth+1);\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}