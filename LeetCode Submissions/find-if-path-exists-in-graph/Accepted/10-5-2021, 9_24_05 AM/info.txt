{"id":566003576,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633406045,"status_display":"Accepted","runtime":"712 ms","url":"/submissions/detail/566003576/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"169 MB","code":"class Solution {\npublic:\n    list<int>* adj;\n    bool x = false;\n    bool y = false;\n    void AddEdge(int u,int v){\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n    void DFS(int s,vector<bool> &visited, int start,int end){\n        visited[s] = true;\n        if(s == start)\n            x = true;\n        for(auto i = adj[s].begin();i!=adj[s].end();i++){\n            if(!visited[*i]){\n                if(*i == end){\n                    y = true;\n                }\n                if(x && y)\n                    return;\n                DFS(*i,visited,start,end);\n            }\n        }\n    }\n    bool validPath(int n, vector<vector<int>>& edges, int start, int end) {\n        adj = new list<int>[n];\n        if(edges.empty()){\n            if(start == 0 && end == 0)\n                return true;\n        }\n        vector<bool> visited(n,false);\n        for(int i=0;i<edges.size();i++){\n            AddEdge(edges[i][0],edges[i][1]);\n        }\n        for(int i=0;i<n;i++){\n            DFS(i,visited,start,end);\n            if(x && y)\n                return true;\n            x = false;\n            y = false;\n        }\n        return false;\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"find-if-path-exists-in-graph"}