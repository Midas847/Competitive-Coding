{"id":539736139,"lang":"cpp","time":"3Â months","timestamp":1629178942,"status_display":"Accepted","runtime":"220 ms","url":"/submissions/detail/539736139/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(!root)\n            return 0;\n        if(root->left==NULL||root->right==NULL)\n            return minDepth(root->left) + minDepth(root->right) + 1;\n        int left = minDepth(root->left)+1;\n        int right = minDepth(root->right)+1;\n        return (left<right?left:right);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}