{"id":539737227,"lang":"cpp","time":"3Â months","timestamp":1629179095,"status_display":"Accepted","runtime":"232 ms","url":"/submissions/detail/539737227/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(!root)\n            return 0;\n        if(root->left==NULL&&root->right==NULL)\n            return 1;\n        if(root->left==NULL)\n            return minDepth(root->right)+1;\n        if(root->right==NULL)\n            return minDepth(root->left)+1;\n        return min(minDepth(root->left),minDepth(root->right))+1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}