{"id":579750478,"lang":"cpp","time":"3Â weeks","timestamp":1635649131,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/579750478/","is_pending":"Not Pending","title":"Find the Minimum and Maximum Number of Nodes Between Critical Points","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> nodesBetweenCriticalPoints(ListNode* head) {\n        vector<int> v;\n        vector<int> v1;\n        ListNode* temp = head;\n        while(temp!=NULL){\n            v.push_back(temp->val);\n            temp = temp->next;\n        }\n        for(int i=1;i<v.size()-1;i++){\n            if(v[i] > v[i-1] && v[i] > v[i+1])\n                v1.push_back(i+1);\n            if(v[i] < v[i-1] && v[i] < v[i+1])\n                v1.push_back(i+1);\n        }\n        if(v1.size() == 0)\n            return {-1,-1};\n        vector<int> v2;\n        sort(v1.begin(),v1.end());\n        int maxd = INT_MIN;\n        int mind = INT_MAX;\n        for(int i=0;i<v1.size();i++){\n            for(int j=0;j<v1.size();j++){\n                if(i != j && v1[j] - v1[i] > maxd)\n                    maxd = v1[j] - v1[i];\n                if(i != j && v1[j] - v1[i] < mind && v1[j]-v1[i] >= 0)\n                    mind = v1[j] - v1[i];\n            }\n        }\n        v2.push_back(mind);\n        v2.push_back(maxd);\n        if(v2[0] == INT_MIN && v2[1] == INT_MAX)\n            return {-1,-1};\n        return v2;\n    }\n};","compare_result":"1111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000","title_slug":"find-the-minimum-and-maximum-number-of-nodes-between-critical-points"}