{"id":545936043,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1630210443,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/545936043/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"16.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sum = 0;\n    \n    void preorder(TreeNode* r, int currNumber){\n        if(r!=NULL){\n        currNumber = (currNumber << 1) | r->val;\n            cout<<currNumber<<endl;\n        if(r->left == NULL && r->right == NULL)\n            sum +=currNumber;\n        preorder(r->left, currNumber);\n        preorder(r->right, currNumber);\n        }\n    }\n    \n    int sumRootToLeaf(TreeNode* root) {\n        preorder(root, 0);\n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers"}