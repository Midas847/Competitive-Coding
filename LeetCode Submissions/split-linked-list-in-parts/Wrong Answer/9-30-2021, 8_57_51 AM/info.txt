{"id":563272086,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632972471,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/563272086/","is_pending":"Not Pending","title":"Split Linked List in Parts","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<ListNode*> splitListToParts(ListNode* head, int k) {\n        vector<ListNode*> v;\n        ListNode* temp = head;\n        int c = 0;\n        while(temp!=NULL){\n            c++;\n            temp = temp->next;\n        }\n        int nmber = c/k;\n        int extra = c%k;\n        cout<<nmber<<\" \"<<extra<<\"\\n\";\n        temp = head;\n        while(temp){\n            v.push_back(temp);\n            int i = 1;\n            while(i < nmber){\n                temp = temp->next;\n                i++;\n            }\n            while(extra>0 && c > k){\n                temp = temp->next;\n                extra--;\n            }\n            ListNode* x = temp->next;\n            temp->next = NULL;\n            temp = x;\n        }\n        while(c < k){\n            v.push_back(NULL);\n            c++;\n        }\n        return v;\n    }\n};","compare_result":"1111111111111111111111111111111011110001101","title_slug":"split-linked-list-in-parts"}