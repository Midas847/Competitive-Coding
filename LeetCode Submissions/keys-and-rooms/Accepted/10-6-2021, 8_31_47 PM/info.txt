{"id":566832208,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633532507,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/566832208/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"11.6 MB","code":"class Solution {\npublic:\n    list<int>* adj;\n    vector<int> v;\n    void addEdge(int u,int v){\n        adj[u].push_back(v);\n    }\n    void DFS(int src,vector<bool> &visited){\n        visited[src] = true;\n        v.push_back(src);\n        list<int>::iterator i;\n        for(i = adj[src].begin();i!=adj[src].end();i++){\n            if(!visited[*i])\n                DFS(*i, visited);\n        }\n    }\n    bool canVisitAllRooms(vector<vector<int>>& rooms) {\n        int n = rooms.size();\n        adj = new list<int>[n];\n        for(int i=0;i<rooms.size();i++){\n            for(int j=0;j<rooms[i].size();j++){\n                addEdge(i, rooms[i][j]);\n            }\n        }\n        vector<bool> visited(n);\n        DFS(0,visited);\n        for(int i=0;i<rooms.size();i++){\n            if(!visited[i])\n                return false;\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms"}