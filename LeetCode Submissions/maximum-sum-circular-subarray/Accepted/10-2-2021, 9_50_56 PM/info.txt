{"id":564573781,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633191656,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/564573781/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"39.8 MB","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& nums) {\n        if(nums.size()==0)\n            return 0;\n        int maxsoFar = nums[0];\n        int maxTotal = nums[0];\n        int minsoFar = nums[0];\n        int minTotal = nums[0];\n        int sum = nums[0];\n        int n = nums.size();\n        for(int i=1;i<n;i++){\n            maxsoFar = max(nums[i],nums[i]+maxsoFar);\n            maxTotal = max(maxTotal,maxsoFar);\n            \n            minsoFar = min(nums[i],nums[i]+minsoFar);\n            minTotal = min(minTotal,minsoFar);\n            \n            sum+=nums[i];\n        }\n        if(sum == minTotal) return maxTotal;\n        return max(sum-minTotal,maxTotal);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray"}