{"id":564570974,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633191273,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/564570974/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& nums) {\n        int max_so_far=INT_MIN;\n        int max_ending_here = 0;\n        for(int i=0;i<nums.size();i++){\n            max_ending_here = max_ending_here + nums[i];\n            if(max_ending_here > max_so_far)\n                max_so_far = max_ending_here;\n            if(max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        \n        int min_so_far=INT_MAX;\n        int min_ending_here = INT_MAX;\n        for(int i=0;i<nums.size();i++){\n            if(min_ending_here > 0)\n                min_ending_here = nums[i];\n            else\n                min_ending_here += nums[i];\n            min_so_far = min(min_so_far, min_ending_here);\n        }\n        return abs(min_so_far)+max_so_far;\n    }\n};","compare_result":"01000000100000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000001","title_slug":"maximum-sum-circular-subarray"}