{"id":558972058,"lang":"cpp","time":"2Â months","timestamp":1632282589,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/558972058/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"13.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    struct compare {\n    bool operator()(\n        struct ListNode* a, struct ListNode* b)\n        {\n            return a->val > b->val;\n        }\n    };\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        priority_queue<ListNode*,vector<ListNode*>,compare> pq;\n        for(int i=0;i<lists.size();i++){\n            if(lists[i]!=NULL)\n                pq.push(lists[i]);\n        }\n        if(pq.empty())\n            return NULL;\n        struct ListNode *dummy = new ListNode(0);\n        struct ListNode *last = dummy;\n   \n        while(!pq.empty()){\n            struct ListNode* curr = pq.top();\n            pq.pop();\n            \n            last->next = curr;\n            last = last->next;\n            \n            if(curr->next!=NULL){\n                pq.push(curr->next);\n            }\n        }\n        return dummy->next;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}